// api/processArtist.js - TRABAJADOR CON CONEXIÃ“N DIRECTA
require('dotenv').config();
const Redis = require('ioredis'); // <-- CAMBIO: Nueva librerÃ­a
// ... (mantÃ©n el resto de tus requires: MongoClient, axios, Gemini, etc.)

// --- CAMBIO: Creamos el cliente de Redis ---
const redis = new Redis(process.env.REDIS_URL);

// ... (mantÃ©n tus funciones de utilidad y la funciÃ³n processSingleArtist)
async function processSingleArtist(artist) { /* ...el cÃ³digo que ya tienes... */ }


async function processQueue() {
    console.log("ðŸ‘· Trabajador iniciado. Buscando tareas...");
    // CAMBIO: Usamos redis.rpop
    const artistString = await redis.rpop('artist-queue');

    if (artistString) {
        const artist = JSON.parse(artistString); // Convertimos el string de vuelta a objeto
        console.log(`ðŸ“¬ Tarea recibida. Procesando: ${artist.name}`);
        await processSingleArtist(artist);
        console.log(`âœ… Tarea para ${artist.name} completada.`);
    } else {
        console.log("ðŸ“ª No hay tareas en la cola.");
    }
    await redis.quit(); // Cerramos la conexiÃ³n de Redis
}

module.exports = async (req, res) => {
    await processQueue();
    res.status(200).send('Ciclo del trabajador completado.');
};